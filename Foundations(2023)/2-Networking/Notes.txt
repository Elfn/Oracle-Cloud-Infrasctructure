* Networking
    * Create instance(item into VCN's subnet)
        * To connect  to instance via ssh in cloud shell
            * 1 -generate a public and private keys and drag and drop to shell terminal online on cloud oracle
            * 2- ssh opc@168.138.88.90 -i cloudshellkey.key
            * 3 - Command to install http server
                * sudo yum -y install httpd
            * 4- Open port 80 on the local firewall
                * sudo firewall-cmd  --permanent  --add-port=80/tcp
            * 5-Reload the firewall
                * sudo firewall-cmd  --reload
            * 6-Start http server
                * sudo systemctl start httpd
            * 7 - sudo su
            * 8 - echo  'webServer1' >> /var/www/html/index.html 
            * Launch 168.138.88.90(Instance Ip) in the browser
            * If it doesnt work go to the security list to create a rules to grant access to whatever traffic(0.0.0.0/0)
            * Launch again on browser 
    * VCN - Virtual Cloud Network
        * it's a private software defined network you create in Oracle Cloud
        * It's used for secure communication
        * Whether instances talking to each other, instances talking to on-premises environments, or instances talking to other instances in different regions, you would use Virtual Cloud Network
        * it's a regional service
        * It's highly available, massively scalable, and secure
        *  VCN has an address space
    * VCN - Routing
        * NAT gateway
            * used for providing NAT as a service
            * It can go from your private subnets to the internet
            * But users from the internet cannot use the NAT gateway to reach your instances running in a private subnet. So the idea with the NAT gateway is to enable outbound communication to the internet, but block inbound communications or connections initiated from the internet
            * the traffic is unidirectional
        * Internet gateway
            * This is a gateway which is massively scalable, highly available, and is used for communication to anything on the internet.
        * Service Gateway
            * It lets resources in VCN access public OCI services such as object storage, but without using an internet or NAT gateway
            * For accessing OCI public services, which are available on the internet but accessing them in a secure manner
        * Dynamic routing gateway
            * It is used for on-premise communication
            * This is a virtual router that provides a path for private traffic between your VCN and destinations other than the internet. So what can these destinations be? Well, this can be your on-premises environment.
        * Route table
            * Used send traffic out of the VCN to the internet, to on-premises networks, or to peered VCN
            * a set of route rules. Each rule specifies a destination CIDR block and a route target. Think about route target as the next hop for the traffic that matches that destination CIDR block
            * keep in mind that traffic within the VCN subnet is automatically handled by the VCN local routing
            * So you see a public subnet and a private subnet here(slide 6). There is no routing needed for routing the data. There's no entry in a route table needed for routing that data between the public subnet and the private subnet. That's taken care by VCN itself
            * Slide7 - explanations
                * So how does this work in reality? As you can see here, I have a private subnet and a public subnet and I'm showing you the route table only for the private subnet just for illustration purposes. And as you can see here, there are two kinds of data movement happening from the private subnet.
                * We are leveraging the NAT gateway. Probably there is a database running here, so you're using a NAT gateway to go and get some patches from the internet. So you can see that green arrow going all the way from the NAT gateway to the internet.
                * And then the second part is you are using a Dynamic Routing Gateway. That's kind of a virtual router you use for on-premises communication, and it's going through on-premises environment. Maybe you are running a DNS server on premises where the database needs to get its DNS resolved.
                * Now, if you look at the route table entries, we have two entries there. There's a CIDR notation, decision CIDR, and there's a route target. The first one says 0.0.0.0/0 and goes to NAT gateway. The second one has a CIDR block for on-premises network.
                * So how does this work in reality? Well, what happens is the route table looks at both the routes and the route which is more specific or gets priority. We also sometimes refer to as the longest prefix match. So if you look at these two CIDR blocks, the /16 is bigger or more specific than /0, so that takes priority.
                * So first, the traffic goes through the Dynamic Routing Gateway to your on-premises environment, your DNS servers. And then the traffic which is not destined for your on-premises environment goes to the internet through the NAT gateway, and hopefully to get a patch in this example. So this is a very quick illustration, but hopefully it shows you how the route table works.
        * Peering(Slide 8)
            * Local peering
                * the networks are within the same OCI region, they can talk to each other through a mechanism called local peering
                * And you can see here we have this concept of a local peering gateway. That's kind of a virtual router which lets you manage that communication.
            * Remote peering
                * If the two networks are in two different OCI data center regions, then you have the same concept, a similar concept, but it's a remote peering
                * And instead of using local peering, now you're using the Dynamic Routing Gateways.
                * Remember we talked about Dynamic Routing Gateways used for on-premises communication anything which is not for internet
        * Dynamic Routing Gateway v2(Slide 9)
            * In case you have large number of networks
            * Used in a real complex environment, where many customers struggle with a lot of networks
            * It's called DRG v2. And what it does is you no longer need to maintain point-to-point connectivity using a local peering gateway, instead the VCNs can communicate using DRG. And this feature also lets you scale up to 300 VCNs on a single DRG. If this option is not enough, you can always connect an extra DRG through a remote peering connection. So the idea is to simplify and scale this experience using this DRG v2.
    * VCN - Security
        * Security list
            * Think about security list as firewall rules associated with a subnet and applied to all instances inside the subnet
            * The security list consists of rules that specify the type of traffic allowed in or out of the subnet.
            * These rules can be stateful or stateless.
            * Stateful means that if traffic is allowed in a particular port, allowed to access in, it is always allowed out from that port, and vice versa
            * Slide 10 Explained
                * And you can see a couple of entries here. These rules can be stateful or stateless. Stateful means that if traffic is allowed in a particular port, allowed in, it is always allowed out from that port, and vice versa.
                * So you can see here a couple of examples. Traffic is coming in at port 80, and the traffic is coming in from anywhere on the web. So that's 0.0.0.0/0. That's the source. Can be anywhere. Protocol is TCP. And it's coming at port 80. That's web traffic.
                * And the second rule says the traffic is going from the first subnet to the second subnet. So you see the source is the IP, the CIDR block for the first subnet, and it's actually the egress traffic. So it's the source for the second subnet, the private subnet. And the traffic is going on port 1521. That's Oracle database port.
                * And you can see, similarly for the private subnet, you have their own firewall rules. And in this case, it's saying that because it's a private subnet, you don't want any kind of web traffic. So the only rule here is the traffic coming from the public subnet, from the web server, so that the source CIDR is 10.0.1.0/24 and the port is 1521, right? So this is how you would define security lists within an OCI VCN service.
        * Network Security Group - NSG
            *  similar construct as security list, but the key difference is these apply only to a set of virtual network interface cards in a single VCN
            * because they apply to individual VNICs, now you could have two instances in a single subnet, and they can have different security constructs
            * So one instance  can have NSG with different kind of rules, and the other instance, you can see, has an NSG-- in this case, we say NSG C. It has different sets of rule
    * Load balancer
        *  Used to achieve high availability and also achieve scalability
        * The way Load Balancer works is, they're also referred to as Reverse Proxies
        * the Load Balancer has to proxy traffic or requests to the various backend servers located into private network(VCN)
        * The load balancer also protect various backend servers located into private network(VCN)
        * The LB also provide high availability so that in case a particular backend server is not available, the application can still be up and running
        * Then LB provide scalability too because if lots of clients start hitting the Load Balancer, you could easily add more backends or more backend servers
        * TYPES OF LOAD BALANCERS
            * Layer 7 LB(Slide 1)
                * Layer 7 basically means it understands HTTP and HTTPS. That's the OSI model
                * LB's 2 Shapes
                    * Flexible shape where you define the minimum and the maximum and you define the range. And your Load Balancer can achieve any kind of-- support any kind of traffic in that particular range, going from 10 Mbps all the way to 8 Gbps.
                    * Dynamic shape where you predefine the shapes. So you have micro, small, medium, large, and you predefine the shape. And you don't have to warm up your Load Balancer. If the traffic comes to that particular shape, the Load Balancer automatically scales
            * Public LB
                * Load Balancer is available on the web
            * Private LB
                * Private means your multiple tiers, like a web tier, can talk to your database tier and balance the traffic between them, but both tiers don't have to be public
            * Network LB(Slide 2)
                * Network Load Balancer operates at layer 4, layer 3, and layer 4 so it understands TCP, UDP, also supports ICMP
                *  Like HTTP Load Balancer, it has both public and a private option, so you could create a public Network Load Balancer or a private Network Load Balancer
                * It's highly available, highly scalable, all those features are supported
                * The primary reason you would use it is it's much faster than HTTP Load Balancer. It has much lower latency. So if performance is a key criteria for you, go with Network Load Balancer
                * On the contrary, the HTTP Load Balancer has higher level intelligence because it can look at the packets, it can inspect the packets, and it gets that intelligence. So if you're looking for that kind of routing intelligence, then go with HTTP Load Balancer.
                * TCP - Transmission Control Protocol
                    * designates a transmission protocol used on IP networks
                * UDP - User Datagram Protocol 
                    * est un des principaux protocoles de télécommunication utilisés par Internet
                    * L' UDP  permet une communication rapide, sans délai : ce protocole de transport est adapté à une transmission rapide des données, car il n'établit pas de connexion. C'est pourquoi les services faisant appel à l' UDP  doivent mettre à disposition des mesures de correction et de protection propres
        * Content based routing
            * Content-based routing is **a mediation capability supported by Oracle Service Bus** based on conditional message processing and transformation capabilities
